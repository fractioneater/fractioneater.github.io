{
  "name": "Flicker",
  "scopeName": "source.flicker",
  "fileTypes": [
    "fl",
    "flicker"
  ],

  "patterns": [
    { "include": "#code" },
    { "include": "#class" }
  ],
  "repository": {
    "comment": {
      "name": "comment.line.flicker",
      "match": "#(?!:).*"
    },
    "block-comment": {
      "name": "comment.block.flicker",
      "begin": "#:",
      "end": "#",
      "patterns": [ { "include": "#block-comment" } ]
    },
    "lambda": {
      "begin": "{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.lambda.begin.flicker"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.lambda.end.flicker"
        }
      },
      "name": "meta.lambda.flicker",
      "patterns": [
        { "include": "code" },
        {
          "name": "meta.lambda.parameters.flicker",
          "begin": "\\|",
          "end": "\\|",
          "patterns": [
            {
              "name": "variable.parameter.lambda.flicker",
              "match": "\\w+"
            }
          ]
        }
      ]
    },
    "keyword": {
      "patterns": [
        {
          "name": "keyword.control.flicker",
          "match": "\\b(?:break|continue|return|do|if|when|else|elif|for|each|while)\\b"
        },
        {
          "name": "keyword.operator.flicker",
          "match": "\\b(?:is|not|and|or|shl|shr)\\b"
        },
        {
          "name": "keyword.operator.range.flicker",
          "match": "(\\.\\.|:)"
        },
        {
          "name": "keyword.operator.arithmetic.flicker",
          "match": "(\\+|\\-|\\*|\/|%)"
        },
        {
          "name": "keyword.operator.comparison.flicker",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.assignment.flicker",
          "match": "(=)"
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "name": "constant.language.flicker",
          "match": "\\b(True|False|None)\\b"
        },
        {
          "name": "constant.numeric.flicker",
          "match": "\\b(0x[0-9A-Fa-f]*|[0-9]+(\\.?[0-9]*)?)\\b"
        },
        {
          "name": "constant.numeric.hexadecimal.flicker",
          "match": "(0x[0-9A-Fa-f]+)"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "name": "variable.language.flicker",
          "match": "\\b(this|super)\\b"
        }
      ]
    },
    "string": {
      "name": "string.quoted.double.flicker",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        { "include": "#string-escapes" }
      ]
    },
    "string-escapes": {
      "patterns": [
        {
          "name": "constant.character.escape.flicker",
          "match": "\\\\(?:[0\"\\abfnrtv]|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})"
        },
        {
          "name": "invalid.illegal.unknown-escape.flicker",
          "match": "\\\\(?:x[0-9A-Fa-f]{0,1}|u[0-9A-Fa-f]{0,3}|U[0-9A-Fa-f]{0,7}|.)"
        },
        {
          "name": "constant.character.interpolation.flicker",
          "match": "=\\((.*?)\\)"
        }
      ]
    },
    "function": {
      "name": "meta.function.flicker",
      "match": "(?:[(.|::)]|\\b)(\\w+)(\\(|\\{)",
      "captures": {
        "1": { "name": "entity.function.flicker" }
      }
    },
    "static-function": {
      "name": "meta.static-function.flicker",
      "match": "\\b([A-Z]+\\w*)[(.|::)](\\w+)(\\(|\\{)",
      "captures": {
        "1": { "name": "entity.name.type.flicker" },
        "2": { "name": "entity.name.function.class.flicker" }
      }
    },
    "static-attribute": {
      "name": "meta.static-attribute.flicker",
      "match": "\\b([A-Z]+\\w*)[(.|::)](\\w+)\\b",
      "captures": {
        "1": { "name": "entity.name.type.flicker" },
        "2": { "name": "variable.other.constant" }
      }
    },
    "code": {
      "patterns": [
        { "include": "#block-comment" },
        { "include": "#comment" },
        { "include": "#keyword" },
        { "include": "#constant" },
        { "include": "#variable" },
        { "include": "#string" },
        { "include": "#function" },
        { "include": "#static-function" },
        { "include": "#static-attribute" }
      ]
    },
    "method": {
      "name": "meta.method.flicker",
      "begin": "(?:\\b((static)?|(attribute)?)\\s+)?(\\w+=|\\w+|\\+|-|\\*|\\/|%|<=?|>=?|==|!=?|&|\\||~)",
      "beginCaptures": {
        "1": { "name": "storage.modifier.flicker" },
        "2": { "name": "entity.name.function.flicker" }
      },
      "end": "}",
      "patterns": [
        {
          "name": "meta.method.identifier.flicker",
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "name": "variable.parameter.function.flicker",
              "match": "\\w+"
            }
          ]
        },
        {
          "name": "meta.method.body.flicker",
          "begin": "{",
          "end": "(?=})",
          "patterns": [
            { "include": "#code" }
          ]
        }
      ]
    },
    "class": {
      "name": "meta.class",
      "begin": "\\b(class)\\s+(\\w+)\\s+((<)?\\s+(\\w+))?",
      "beginCaptures": {
        "1": { "name": "storage.type.class.flicker" },
        "2": { "name": "entity.name.class.flicker" },
        "3": { "name": "entity.name.class.flicker" }
      },
      "end": "}",
      "patterns": [
        {
          "name": "meta.class.body.flicker",
          "begin": "\\n",
          "patterns": [
              { "include": "#comment" },
              { "include": "#block-comment" },
              { "include": "#method" }
          ],
          "end": "(?=})"
        }
      ]
    }
  },
  "uuid": "todo..."
}