{
  "name": "Flicker",
  "scopeName": "source.flicker",
  "fileTypes": [
    "fl",
    "flicker"
  ],

  "patterns": [
    { "include": "#comment" },
    { "include": "#block-comment" },
    { "include": "#string" },
    { "include": "#lambda" },
    { "include": "#keyword" },
    { "include": "#constant" },
    { "include": "#variable" },
    { "include": "#type" },
    { "include": "#modifier" },
    { "include": "#declaration" },
    { "include": "#function" },
    { "include": "#call" },
    { "include": "#method-call" },
    { "include": "#callable" },
    { "include": "#class" }
  ],
  "repository": {
    "comment": {
      "name": "comment.line.number-sign.flicker",
      "match": "#(?!:).*\\n?"
    },
    "block-comment": {
      "name": "comment.block.flicker",
      "begin": "#:",
      "end": "#",
      "patterns": [ { "include": "#block-comment" } ]
    },
        "string": {
      "name": "string.quoted.double.flicker",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.flicker"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.flicker"
        }
      },
      "patterns": [
        { "include": "#string-escapes" }
      ]
    },
    "string-escapes": {
      "patterns": [
        {
          "name": "constant.character.escape.flicker",
          "match": "\\\\(?:[0\"\\abfnrtv]|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})"
        },
        {
          "name": "invalid.illegal.unknown-escape.flicker",
          "match": "\\\\(?:x[0-9A-Fa-f]{0,1}|u[0-9A-Fa-f]{0,3}|U[0-9A-Fa-f]{0,7}|.)"
        },
        {
          "name": "constant.character.interpolation.flicker",
          "match": "=\\((.*?)\\)"
        }
      ]
    },
    "lambda": {
      "begin": "{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.lambda.begin.flicker"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.lambda.end.flicker"
        }
      },
      "name": "meta.lambda.flicker",
      "patterns": [
        {
          "name": "meta.lambda.parameters.flicker",
          "begin": "\\|",
          "end": "\\|",
          "patterns": [
            {
              "name": "variable.parameter.lambda.flicker",
              "match": "\\w+"
            }
          ]
        }
      ]
    },
    "keyword": {
      "patterns": [
        {
          "name": "keyword.control.flicker",
          "match": "\\b(?:break|continue|return|print|do|if|when|else|elif|for|each|while)\\b"
        },
        {
          "name": "keyword.operator.flicker",
          "match": "\\b(?:is|not|and|or|shl|shr)\\b"
        },
        {
          "name": "keyword.operator.range.flicker",
          "match": "(\\.\\.|(?<!:):(?!:))"
        },
        {
          "name": "keyword.operator.arithmetic.flicker",
          "match": "(\\+|\\-|\\*|\/|%)"
        },
        {
          "name": "keyword.operator.comparison.flicker",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.assignment.flicker",
          "match": "(=)"
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "name": "constant.language.flicker",
          "match": "\\b(True|False|None)\\b"
        },
        {
          "name": "constant.numeric.flicker",
          "match": "\\b(0x[0-9A-Fa-f]*|[0-9]+(\\.?[0-9]*)?)\\b"
        },
        {
          "name": "constant.numeric.hexadecimal.flicker",
          "match": "(0x[0-9A-Fa-f]+)"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "name": "variable.language.flicker",
          "match": "\\b(this|super)\\b"
        }
      ]
    },
    "type": {
      "name": "entity.name.type.flicker",
      "match": "\\b([A-Z]\\w*)\\b"
    },
    "modifier": {
      "name": "storage.modifier.flicker",
      "match": "\\b(static|attribute)\\b"
    },
    "declaration": {
      "patterns": [
        {
          "name": "storage.type.variable.flicker",
          "match": "\\b(var)\\b"
        },
        {
          "name": "storage.type.function.flicker",
          "match": "\\b(fun)\\b"
        }
      ]
    },
    "function": {
      "match": "\\b(fun)\\b\\s+(\\w+)",
      "captures": {
        "1": { "name": "storage.type.function.flicker" },
        "2": { "name": "entity.name.function.flicker" }
      },
      "patterns": [
        {
          "name": "meta.parameters.function.flicker",
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "name": "variable.parameter.function.flicker",
              "match": "\\w+"
            }
          ]
        }
      ]
    },
    "call": {
      "match": "\\b(([A-Z]\\w*)|(\\w+))\\b(\\(|{)",
      "captures": {
        "1": { "name": "entity.name.type.flicker" },
        "2": { "name": "entity.name.function.flicker" }
      }
    },
    "method-call": {
      "match": "\\.(\\w+)(\\(|{)",
      "captures": {
        "1": { "name": "entity.name.function.flicker" }
      }
    },
    "callable": {
      "match": "::(\\w+)(?:\\((\\d+)\\))?",
      "captures": {
        "1": { "name": "entity.name.function.flicker" },
        "2": { "name": "variable.parameter.flicker" }
      }
    },
    "class": {
      "match": "\\b(class)\\s+(\\w+)\\s+((<)?\\s+(\\w+))?",
      "captures": {
        "1": { "name": "storage.type.class.flicker" },
        "2": { "name": "entity.name.type.class.flicker" },
        "3": { "name": "entity.name.type.class.flicker" }
      }
    }
  }
}